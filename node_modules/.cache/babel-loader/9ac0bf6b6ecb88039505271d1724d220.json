{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\src\\\\SearchBar.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './SearchBar.css';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.getSuggestions = function (value) {\n      var inputValue = value.trim().toLowerCase();\n      var inputLength = inputValue.length;\n      return inputLength === 0 ? [] : _this.props.gameData.filter(function (game) {\n        return game.GameName.toLowerCase().includes(inputValue);\n      });\n    };\n\n    _this.getSuggestionValue = function (suggestion) {\n      return suggestion.GameName;\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.renderSuggestion = function (suggestion) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, suggestion.GameName);\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: _this.getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.onSuggestionSelected = function (event, _ref3) {\n      var suggestion = _ref3.suggestion,\n          suggestionValue = _ref3.suggestionValue,\n          suggestionIndex = _ref3.suggestionIndex,\n          sectionIndex = _ref3.sectionIndex,\n          method = _ref3.method;\n\n      _this.setState({\n        selectedSuggestion: suggestion\n      });\n\n      _this.props.getSelectedGame(suggestion);\n    };\n\n    var date = new Date();\n    _this.state = {\n      value: date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + (date.getDate() - 1),\n      suggestions: [],\n      selectedSuggestion: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: 'Search for a game',\n        type: \"search\",\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: inputProps,\n        onSuggestionSelected: this.onSuggestionSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["C:\\Users\\MarvinT\\Desktop\\stuff\\nba-play-viewer-master\\src\\SearchBar.js"],"names":["React","Component","Autosuggest","SearchBar","props","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","gameData","filter","game","GameName","includes","getSuggestionValue","suggestion","onChange","event","newValue","setState","renderSuggestion","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","selectedSuggestion","getSelectedGame","date","Date","state","getFullYear","getMonth","getDate","inputProps","placeholder","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var date = new Date();\r\n\r\n    this.state = {\r\n      value: date.getFullYear() + '-' + (date.getMonth()+1) + '-' + (date.getDate()-1),\r\n      suggestions: [],\r\n      selectedSuggestion: []\r\n    };\r\n  }\r\n\r\n  getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : this.props.gameData.filter(game =>\r\n      game.GameName.toLowerCase().includes(inputValue)\r\n    );\r\n  };\r\n\r\n  getSuggestionValue = (suggestion) => suggestion.GameName;\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  renderSuggestion = (suggestion) => (\r\n    <div>\r\n      {suggestion.GameName}\r\n    </div>\r\n  );\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.setState({selectedSuggestion: suggestion})\r\n    this.props.getSelectedGame(suggestion)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      placeholder: 'Search for a game',\r\n      type: \"search\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={this.getSuggestionValue}\r\n        renderSuggestion={this.renderSuggestion}\r\n        inputProps={inputProps}\r\n        onSuggestionSelected={this.onSuggestionSelected}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}