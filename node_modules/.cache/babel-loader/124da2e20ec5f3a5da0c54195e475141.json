{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\src\\\\SearchBar.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuggestions = value => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n      return inputLength === 0 ? [] : this.props.gameData.filter(game => game.GameName.toLowerCase().includes(inputValue));\n    };\n\n    this.getSuggestionValue = suggestion => suggestion.GameName;\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.renderSuggestion = suggestion => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, suggestion.GameName);\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.onSuggestionSelected = (event, {\n      suggestion,\n      suggestionValue,\n      suggestionIndex,\n      sectionIndex,\n      method\n    }) => {\n      this.setState({\n        selectedSuggestion: suggestion\n      });\n      this.props.getSelectedGame(suggestion);\n    };\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      selectedSuggestion: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: 'Search for a game by team or date',\n      type: \"search\",\n      value,\n      onChange: this.onChange\n    };\n    return /*#__PURE__*/React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps,\n      onSuggestionSelected: this.onSuggestionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/MarvinT/Desktop/stuff/nba-play-viewer-master/src/SearchBar.js"],"names":["React","Component","Autosuggest","SearchBar","constructor","props","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","gameData","filter","game","GameName","includes","getSuggestionValue","suggestion","onChange","event","newValue","setState","renderSuggestion","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","selectedSuggestion","getSelectedGame","state","render","inputProps","placeholder","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,cAVmB,GAUDC,KAAD,IAAW;AAC1B,YAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,YAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,aAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyB,KAAKN,KAAL,CAAWQ,QAAX,CAAoBC,MAApB,CAA2BC,IAAI,IAC7DA,IAAI,CAACC,QAAL,CAAcN,WAAd,GAA4BO,QAA5B,CAAqCT,UAArC,CAD8B,CAAhC;AAGD,KAjBkB;;AAAA,SAmBnBU,kBAnBmB,GAmBGC,UAAD,IAAgBA,UAAU,CAACH,QAnB7B;;AAAA,SAqBnBI,QArBmB,GAqBR,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAClC,WAAKC,QAAL,CAAc;AACZhB,QAAAA,KAAK,EAAEe;AADK,OAAd;AAGD,KAzBkB;;AAAA,SA2BnBE,gBA3BmB,GA2BCL,UAAD,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,UAAU,CAACH,QADd,CA5BiB;;AAAA,SAiCnBS,2BAjCmB,GAiCW,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAe;AAC3C,WAAKgB,QAAL,CAAc;AACZG,QAAAA,WAAW,EAAE,KAAKpB,cAAL,CAAoBC,KAApB;AADD,OAAd;AAGD,KArCkB;;AAAA,SAuCnBoB,2BAvCmB,GAuCW,MAAM;AAClC,WAAKJ,QAAL,CAAc;AACZG,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KA3CkB;;AAAA,SA6CnBE,oBA7CmB,GA6CI,CAACP,KAAD,EAAQ;AAAEF,MAAAA,UAAF;AAAcU,MAAAA,eAAd;AAA+BC,MAAAA,eAA/B;AAAgDC,MAAAA,YAAhD;AAA8DC,MAAAA;AAA9D,KAAR,KAAmF;AACxG,WAAKT,QAAL,CAAc;AAACU,QAAAA,kBAAkB,EAAEd;AAArB,OAAd;AACA,WAAKd,KAAL,CAAW6B,eAAX,CAA2Bf,UAA3B;AACD,KAhDkB;;AAGjB,SAAKgB,KAAL,GAAa;AACX5B,MAAAA,KAAK,EAAE,EADI;AAEXmB,MAAAA,WAAW,EAAE,EAFF;AAGXO,MAAAA,kBAAkB,EAAE;AAHT,KAAb;AAKD;;AA2CDG,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKD,KAD7B;AAAA,UACC5B,KADD,eACCA,KADD;AAAA,UACQmB,WADR,eACQA,WADR;AAGP,UAAMW,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,mCADI;AAEjBC,MAAAA,IAAI,EAAE,QAFW;AAGjBhC,MAAAA,KAHiB;AAIjBa,MAAAA,QAAQ,EAAE,KAAKA;AAJE,KAAnB;AAOA,wBACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEM,WADf;AAEE,MAAA,2BAA2B,EAAE,KAAKD,2BAFpC;AAGE,MAAA,2BAA2B,EAAE,KAAKE,2BAHpC;AAIE,MAAA,kBAAkB,EAAE,KAAKT,kBAJ3B;AAKE,MAAA,gBAAgB,EAAE,KAAKM,gBALzB;AAME,MAAA,UAAU,EAAEa,UANd;AAOE,MAAA,oBAAoB,EAAE,KAAKT,oBAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAzE+B;;AA4ElC,eAAezB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n      selectedSuggestion: []\r\n    };\r\n  }\r\n\r\n  getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : this.props.gameData.filter(game =>\r\n      game.GameName.toLowerCase().includes(inputValue)\r\n    );\r\n  };\r\n\r\n  getSuggestionValue = (suggestion) => suggestion.GameName;\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  renderSuggestion = (suggestion) => (\r\n    <div>\r\n      {suggestion.GameName}\r\n    </div>\r\n  );\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n    this.setState({selectedSuggestion: suggestion})\r\n    this.props.getSelectedGame(suggestion)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      placeholder: 'Search for a game by team or date',\r\n      type: \"search\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={this.getSuggestionValue}\r\n        renderSuggestion={this.renderSuggestion}\r\n        inputProps={inputProps}\r\n        onSuggestionSelected={this.onSuggestionSelected}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}