{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\MarvinT\\\\Desktop\\\\stuff\\\\nba-play-viewer-master\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar path = require('path');\n\nvar DOMParser = require('xmldom').DOMParser;\n\nvar axios = require('axios');\n\nvar stat_endpoints = require('./data/endpoints.json');\n\nvar teams = require('./data/teams.json');\n\nvar players = require('./data/players.json');\n\nvar jsonp = require('jsonp');\n\nvar default_options = {\n  formatted: true,\n  parameters: false\n};\n\ngenerateURL = function generateURL(params, endpoint) {\n  var values = _objectSpread({}, stat_endpoints[endpoint].params, params);\n\n  var url = stat_endpoints[endpoint].url + \"?\";\n  var param_names = Object.keys(values);\n\n  for (var i = 0; i < param_names.length; i++) {\n    url = url + param_names[i] + \"=\" + values[param_names[i]] + \"&\";\n  }\n\n  return url;\n};\n\nformatData = function formatData(json, options) {\n  var data = {};\n  var parameters = json.parameters;\n\n  if (options.formatted) {\n    var result_set = json.resultSets;\n\n    for (i in result_set) {\n      var merged = {};\n\n      if (result_set[i].rowSet.length !== 1) {\n        var multipleRowSets = {};\n\n        for (j in result_set[i].rowSet) {\n          var temp = {};\n\n          for (k in result_set[i].headers) {\n            temp[result_set[i].headers[k]] = result_set[i].rowSet[j][k];\n          }\n\n          multipleRowSets[j] = temp;\n        }\n\n        data[result_set[i].name] = multipleRowSets;\n      } else {\n        for (j in result_set[i].headers) {\n          merged[result_set[i].headers[j]] = result_set[i].rowSet[0][j];\n        }\n\n        data[result_set[i].name] = merged;\n      }\n    }\n  } else data = json;\n\n  if (options.parameters) return {\n    data: data,\n    parameters: parameters\n  };else return data;\n};\n\ngetDataFromNBA = function getDataFromNBA(params, endpoint, options) {\n  var headers = {\n    \"Accept-Encoding\": \"Accepflate, sdch\",\n    \"Accept-Language\": \"he-IL,he;q=0.8,en-US;q=0.6,en;q=0.4\",\n    \"Cache-Control\": \"max-age=0\",\n    Connection: \"keep-alive\",\n    Host: \"stats.nba.com\",\n    Referer: \"http://stats.nba.com/\",\n    \"User-Agent\": \"PostmanRuntime/7.4.0\"\n  };\n  var url = generateURL(params, endpoint);\n  return new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      axios.get(url, {\n        headers: headers\n      }).then(function (res) {\n        resolve(formatData(res.data, options));\n      }).catch(function (err) {\n        reject(err);\n      });\n    } else {\n      jsonp(url, null, function (err, data) {\n        if (!err) resolve(formatData(data, options));else reject(err);\n      });\n    }\n  });\n};\n\nmodule.exports = {\n  teamDetails: function teamDetails(params, options) {\n    return getDataFromNBA(params, \"team_details\", _objectSpread({}, default_options, options));\n  },\n  teamRoster: function teamRoster(params, options) {\n    return getDataFromNBA(params, \"team_roster\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamTrackingShots: function leagueTeamTrackingShots(params, options) {\n    return getDataFromNBA(params, \"league_team_tracking_shots\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamGeneralStats: function leagueTeamGeneralStats(params, options) {\n    return getDataFromNBA(params, \"league_team_general_stats\", _objectSpread({}, default_options, options));\n  },\n  allPlayersList: function allPlayersList(params, options) {\n    return getDataFromNBA(params, \"all_players_list\", _objectSpread({}, default_options, options));\n  },\n  franchiseLeaders: function franchiseLeaders(params, options) {\n    return getDataFromNBA(params, \"franchise_leaders\", _objectSpread({}, default_options, options));\n  },\n  franchiseLeadersRank: function franchiseLeadersRank(params, options) {\n    return getDataFromNBA(params, \"franchise_leaders_rank\", _objectSpread({}, default_options, options));\n  },\n  teamGeneralSplits: function teamGeneralSplits(params, options) {\n    return getDataFromNBA(params, \"team_general_splits\", _objectSpread({}, default_options, options));\n  },\n  teamYearSplits: function teamYearSplits(params, options) {\n    return getDataFromNBA(params, \"team_year_splits\", _objectSpread({}, default_options, options));\n  },\n  teamPerformanceSplits: function teamPerformanceSplits(params, options) {\n    return getDataFromNBA(params, \"team_performance_splits\", _objectSpread({}, default_options, options));\n  },\n  teamClutchSplits: function teamClutchSplits(params, options) {\n    return getDataFromNBA(params, \"team_clutch_splits\", _objectSpread({}, default_options, options));\n  },\n  teamInGameSplits: function teamInGameSplits(params, options) {\n    return getDataFromNBA(params, \"team_in_game_splits\", _objectSpread({}, default_options, options));\n  },\n  teamLastNGamesSplits: function teamLastNGamesSplits(params, options) {\n    return getDataFromNBA(params, \"team_lastngames_splits\", _objectSpread({}, default_options, options));\n  },\n  teamOpponentSplits: function teamOpponentSplits(params, options) {\n    return getDataFromNBA(params, \"team_opponent_splits\", _objectSpread({}, default_options, options));\n  },\n  teamShootingSplits: function teamShootingSplits(params, options) {\n    return getDataFromNBA(params, \"team_shooting_splits\", _objectSpread({}, default_options, options));\n  },\n  teamLineups: function teamLineups(params, options) {\n    return getDataFromNBA(params, \"team_lineups\", _objectSpread({}, default_options, options));\n  },\n  teamPlayerStats: function teamPlayerStats(params, options) {\n    return getDataFromNBA(params, \"team_player_stats\", _objectSpread({}, default_options, options));\n  },\n  teamPlayerOnOffDetails: function teamPlayerOnOffDetails(params, options) {\n    return getDataFromNBA(params, \"team_player_on_off_details\", _objectSpread({}, default_options, options));\n  },\n  teamPlayerOnOffRatings: function teamPlayerOnOffRatings(params, options) {\n    return getDataFromNBA(params, \"team_player_on_off_ratings\", _objectSpread({}, default_options, options));\n  },\n  teamTrackingShots: function teamTrackingShots(params, options) {\n    return getDataFromNBA(params, \"team_tracking_shots\", _objectSpread({}, default_options, options));\n  },\n  teamTrackingReb: function teamTrackingReb(params, options) {\n    return getDataFromNBA(params, \"team_tracking_reb\", _objectSpread({}, default_options, options));\n  },\n  teamTrackingPasses: function teamTrackingPasses(params, options) {\n    return getDataFromNBA(params, \"team_tracking_passes\", _objectSpread({}, default_options, options));\n  },\n  teamBoxScoresTraditional: function teamBoxScoresTraditional(params, options) {\n    return getDataFromNBA(params, \"team_box_scores_traditional\", _objectSpread({}, default_options, options));\n  },\n  teamBoxScoresAdvanced: function teamBoxScoresAdvanced(params, options) {\n    return getDataFromNBA(params, \"team_box_scores_advanced\", _objectSpread({}, default_options, options));\n  },\n  teamYearByYearStats: function teamYearByYearStats(params, options) {\n    return getDataFromNBA(params, \"team_year_by_year_stats\", _objectSpread({}, default_options, options));\n  },\n  teamPlayerMatchups: function teamPlayerMatchups(params, options) {\n    return getDataFromNBA(params, \"team_player_matchups\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamDefenseStats: function leagueTeamDefenseStats(params, options) {\n    return getDataFromNBA(params, \"league_team_defense_stats\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamShootingStats: function leagueTeamShootingStats(params, options) {\n    return getDataFromNBA(params, \"league_team_shooting_stats\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamOpponentShooting: function leagueTeamOpponentShooting(params, options) {\n    return getDataFromNBA(params, \"league_team_opponent_shooting\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamHustleStats: function leagueTeamHustleStats(params, options) {\n    return getDataFromNBA(params, \"league_team_hustle_stats\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamEstimatedAdvancedStats: function leagueTeamEstimatedAdvancedStats(params, options) {\n    return getDataFromNBA(params, \"league_team_estimated_advanced_stats\", _objectSpread({}, default_options, options));\n  },\n  leagueTeamClutchStats: function leagueTeamClutchStats(params, options) {\n    return getDataFromNBA(params, \"league_team_clutch_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerGeneralStats: function leaguePlayerGeneralStats(params, options) {\n    return getDataFromNBA(params, \"league_player_general_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerEstimatedAdvancedStats: function leaguePlayerEstimatedAdvancedStats(params, options) {\n    return getDataFromNBA(params, \"league_player_estimated_advanced_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerClutchStats: function leaguePlayerClutchStats(params, options) {\n    return getDataFromNBA(params, \"league_player_clutch_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerTrackingStats: function leaguePlayerTrackingStats(params, options) {\n    return getDataFromNBA(params, \"league_player_tracking_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerShootingDefense: function leaguePlayerShootingDefense(params, options) {\n    return getDataFromNBA(params, \"league_player_shooting_defense\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerTrackingShooting: function leaguePlayerTrackingShooting(params, options) {\n    return getDataFromNBA(params, \"league_player_tracking_shooting\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerBoxScoresTraditional: function leaguePlayerBoxScoresTraditional(params, options) {\n    return getDataFromNBA(params, \"league_player_box_scores_traditional\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerBoxScoresAdvanced: function leaguePlayerBoxScoresAdvanced(params, options) {\n    return getDataFromNBA(params, \"league_player_box_scores_advanced\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerShotLocations: function leaguePlayerShotLocations(params, options) {\n    return getDataFromNBA(params, \"league_player_shot_locations\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerShotLocationDefense: function leaguePlayerShotLocationDefense(params, options) {\n    return getDataFromNBA(params, \"league_player_shot_location_defense\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerHustleStats: function leaguePlayerHustleStats(params, options) {\n    return getDataFromNBA(params, \"league_player_hustle_stats\", _objectSpread({}, default_options, options));\n  },\n  leaguePlayerBioStats: function leaguePlayerBioStats(params, options) {\n    return getDataFromNBA(params, \"league_player_bio_stats\", _objectSpread({}, default_options, options));\n  },\n  scoreboard: function scoreboard(params, options) {\n    return getDataFromNBA(params, \"scoreboard\", _objectSpread({}, default_options, options));\n  },\n  boxScoreTraditional: function boxScoreTraditional(params, options) {\n    return getDataFromNBA(params, \"box_score_traditional\", _objectSpread({}, default_options, options));\n  },\n  boxScoreAdvanced: function boxScoreAdvanced(params, options) {\n    return getDataFromNBA(params, \"box_score_advanced\", _objectSpread({}, default_options, options));\n  },\n  boxScoreSummary: function boxScoreSummary(params, options) {\n    return getDataFromNBA(params, \"box_score_summary\", _objectSpread({}, default_options, options));\n  },\n  boxScoreScoring: function boxScoreScoring(params, options) {\n    return getDataFromNBA(params, \"box_score_scoring\", _objectSpread({}, default_options, options));\n  },\n  boxScoreMisc: function boxScoreMisc(params, options) {\n    return getDataFromNBA(params, \"box_score_misc\", _objectSpread({}, default_options, options));\n  },\n  boxScoreUsage: function boxScoreUsage(params, options) {\n    return getDataFromNBA(params, \"box_score_usage\", _objectSpread({}, default_options, options));\n  },\n  boxScoreFourFactors: function boxScoreFourFactors(params, options) {\n    return getDataFromNBA(params, \"box_score_four_factors\", _objectSpread({}, default_options, options));\n  },\n  boxScorePlayerTracking: function boxScorePlayerTracking(params, options) {\n    return getDataFromNBA(params, \"box_score_player_tracking\", _objectSpread({}, default_options, options));\n  },\n  boxScoreHustle: function boxScoreHustle(params, options) {\n    return getDataFromNBA(params, \"box_score_hustle\", _objectSpread({}, default_options, options));\n  },\n  boxScoreDefense: function boxScoreDefense(params, options) {\n    return getDataFromNBA(params, \"box_score_defense\", _objectSpread({}, default_options, options));\n  },\n  boxScoreMatchups: function boxScoreMatchups(params, options) {\n    return getDataFromNBA(params, \"box_score_matchups\", _objectSpread({}, default_options, options));\n  },\n  playByPlay: function playByPlay(params, options) {\n    return getDataFromNBA(params, \"play_by_play\", _objectSpread({}, default_options, options));\n  },\n  winProbability: function winProbability(params, options) {\n    return getDataFromNBA(params, \"win_probability\", _objectSpread({}, default_options, options));\n  },\n  infographicFanduelPlayer: function infographicFanduelPlayer(params, options) {\n    return getDataFromNBA(params, \"infographic_fanduel_player\", _objectSpread({}, default_options, options));\n  },\n  leagueStandings: function leagueStandings(params, options) {\n    return getDataFromNBA(params, \"league_standings\", _objectSpread({}, default_options, options));\n  },\n  draftHistory: function draftHistory(params, options) {\n    return getDataFromNBA(params, \"draft_history\", _objectSpread({}, default_options, options));\n  },\n  draftCombineSpotUpShooting: function draftCombineSpotUpShooting(params, options) {\n    return getDataFromNBA(params, \"draft_combine_spot_up_shooting\", _objectSpread({}, default_options, options));\n  },\n  draftCombineNonStationaryShooting: function draftCombineNonStationaryShooting(params, options) {\n    return getDataFromNBA(params, \"draft_combine_nonstationary_shooting\", _objectSpread({}, default_options, options));\n  },\n  draftCombineDrillResults: function draftCombineDrillResults(params, options) {\n    return getDataFromNBA(params, \"draft_combine_drill_results\", _objectSpread({}, default_options, options));\n  },\n  draftCombinePlayerAnthro: function draftCombinePlayerAnthro(params, options) {\n    return getDataFromNBA(params, \"draft_combine_player_anthro\", _objectSpread({}, default_options, options));\n  },\n  franchiseHistory: function franchiseHistory(params, options) {\n    return getDataFromNBA(params, \"franchise_history\", _objectSpread({}, default_options, options));\n  },\n  playerGameStreakFinder: function playerGameStreakFinder(params, options) {\n    return getDataFromNBA(params, \"player_game_streak_finder\", _objectSpread({}, default_options, options));\n  },\n  teamGameStreakFinder: function teamGameStreakFinder(params, options) {\n    return getDataFromNBA(params, \"team_game_streak_finder\", _objectSpread({}, default_options, options));\n  },\n  leagueGameFinder: function leagueGameFinder(params, options) {\n    return getDataFromNBA(params, \"league_game_finder\", _objectSpread({}, default_options, options));\n  },\n  playerSplitsByYear: function playerSplitsByYear(params, options) {\n    return getDataFromNBA(params, \"player_splits_by_year\", _objectSpread({}, default_options, options));\n  },\n  playerSplits: function playerSplits(params, options) {\n    return getDataFromNBA(params, \"player_splits\", _objectSpread({}, default_options, options));\n  },\n  playerCareerStats: function playerCareerStats(params, options) {\n    return getDataFromNBA(params, \"player_career_stats\", _objectSpread({}, default_options, options));\n  },\n  playerAwards: function playerAwards(params, options) {\n    return getDataFromNBA(params, \"player_awards\", _objectSpread({}, default_options, options));\n  },\n  playerBoxScores: function playerBoxScores(params, options) {\n    return getDataFromNBA(params, \"player_box_scores\", _objectSpread({}, default_options, options));\n  },\n  playerTrackingShooting: function playerTrackingShooting(params, options) {\n    return getDataFromNBA(params, \"player_tracking_shooting\", _objectSpread({}, default_options, options));\n  },\n  playerTrackingReb: function playerTrackingReb(params, options) {\n    return getDataFromNBA(params, \"player_tracking_reb\", _objectSpread({}, default_options, options));\n  },\n  playerTrackingPasses: function playerTrackingPasses(params, options) {\n    return getDataFromNBA(params, \"player_tracking_passes\", _objectSpread({}, default_options, options));\n  },\n  playerTrackingDefense: function playerTrackingDefense(params, options) {\n    return getDataFromNBA(params, \"player_tracking_defense\", _objectSpread({}, default_options, options));\n  },\n  playerMatchups: function playerMatchups(params, options) {\n    return getDataFromNBA(params, \"player_matchups\", _objectSpread({}, default_options, options));\n  },\n  playerInfo: function playerInfo(params, options) {\n    return getDataFromNBA(params, \"player_info\", _objectSpread({}, default_options, options));\n  },\n  leagueLeaders: function leagueLeaders(params, options) {\n    return getDataFromNBA(params, \"league_leaders\", {\n      formatted: false,\n      parameters: false\n    });\n  },\n  getPlayerID: function getPlayerID(playerName) {\n    return players[playerName];\n  },\n  getTeamID: function getTeamID(teamName) {\n    return teams[teamName];\n  },\n  getTeamLogoURLs: function getTeamLogoURLs(teamAbr) {\n    return ['https://stats.nba.com/media/img/teams/logos/' + teamAbr + '_logo.svg', 'https://cdn.nba.net/assets/logos/teams/secondary/web/' + teamAbr + '.svg'];\n  },\n  getPlayerHeadshotURL: function getPlayerHeadshotURL(params) {\n    return 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/' + params.TeamID + '/2018/260x190/' + params.PlayerID + '.png';\n  },\n  transactions: function transactions() {\n    return getDataFromNBA({}, \"transactions\", {\n      formatted: false,\n      parameters: false\n    });\n  },\n  schedule: function schedule() {\n    return new Promise(function (resolve, reject) {\n      axios.get('https://data.nba.com/data/10s/v2015/json/mobile_teams/nba/2018/league/00_full_schedule_week.json').then(function (res) {\n        resolve(res.data);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  },\n  getPBPVideoURL: function getPBPVideoURL(vid) {\n    return new Promise(function (resolve, reject) {\n      var url = 'https://stats.nba.com/stats/videoeventsasset?GameEventID=' + vid.EventNum + '&GameID=' + vid.GameID;\n      axios.get(url).then(function (res) {\n        var vidUrl = res.data.resultSets.Meta.videoUrls[0].lurl;\n        resolve(vidUrl);\n      }).catch(function (err) {\n        console.log(err);\n        reject(err);\n      });\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}